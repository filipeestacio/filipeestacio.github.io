{"version":3,"sources":["webpack:///./src/components/RepoList/RepoList.styled.js","webpack:///./src/components/Repo/Repo.styled.js","webpack:///./src/components/Repo/Repo.js","webpack:///./src/components/RepoList/RepoList.js","webpack:///./src/pages/repos.js"],"names":["StyledRepoList","styled","div","Wrapper","li","Title","h3","LogoWrapper","Logo","Img","Description","p","Repo","ul","content","repo","name","url","description","data","useStaticQuery","useState","toggle","setToggle","onClick","href","target","rel","fluid","githubImage","childImageSharp","replace","codesandboxImage","RepoList","github","search","repos","map","Repos","Layout"],"mappings":"+JAEaA,EAAiBC,IAAOC,IAAV,oFAAGD,CAAH,M,qBCCdE,EAAUF,IAAOG,GAAV,0EAAGH,CAAH,0HAYPI,EAAQJ,IAAOK,GAAV,wEAAGL,CAAH,wDAOLM,EAAcN,IAAOC,IAAV,8EAAGD,CAAH,+CAMXO,EAAOP,YAAOQ,KAAV,uEAAGR,CAAH,iBAIJS,EAAcT,IAAOU,EAAV,8EAAGV,CAAH,MCsBTW,GDpBUX,IAAOY,GAAV,4EAAGZ,CAAH,MAEDA,IAAOG,GAAV,wEAAGH,CAAH,MChCL,SAAC,GAIP,IAAD,IAHJa,QACEC,KAAQC,EAEN,EAFMA,KAAMC,EAEZ,EAFYA,IAAKC,EAEjB,EAFiBA,YAGfC,EAAOC,YAAe,cADxB,EAoBwBC,oBAAS,GAA9BC,EApBH,KAoBWC,EApBX,KAsBJ,OACE,kBAACpB,EAAD,CACEqB,QAAS,WACPD,GAAWD,KAGb,kBAACjB,EAAD,KAAQW,GACR,kBAACN,EAAD,KAAcQ,GACd,kBAACX,EAAD,KACE,uBAAGkB,KAAMR,EAAKS,OAAO,SAASC,IAAI,cAChC,kBAACnB,EAAD,CAAMoB,MAAOT,EAAKU,YAAYC,gBAAgBF,SAEhD,uBACEH,KAAMR,EAAIc,QAAQ,SAAU,aAC5BL,OAAO,SACPC,IAAI,cAEJ,kBAACnB,EAAD,CAAMoB,MAAOT,EAAKa,iBAAiBF,gBAAgBF,aCH9CK,EAvCE,WACf,IAAMd,EAAOC,YAAe,cA6B5B,OACE,kBAACpB,EAAD,KACGmB,EAAKe,OAAOC,OAAOC,MAAMC,KAAI,SAAAtB,GAAI,OAChC,kBAAC,EAAD,CAAMD,QAASC,SCzBRuB,UATD,WACZ,OACE,kBAACC,EAAA,EAAD,KACE,iDACA,kBAAC,EAAD","file":"component---src-pages-repos-js-13c5cb5a9be279ebc6e2.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const StyledRepoList = styled.div``\n","import styled from \"styled-components\"\nimport Img from \"gatsby-image\"\n\nexport const Wrapper = styled.li`\n  list-style: none;\n  padding: 20px;\n  margin: 40px 10px;\n  border: 2px solid black;\n  border-radius: 20px;\n\n  &:hover {\n    background: #cccccc;\n  }\n`\n\nexport const Title = styled.h3`\n  text-transform: capitalize;\n  a {\n    text-decoration: none;\n  }\n`\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n`\n\nexport const Logo = styled(Img)`\n  width: 30px;\n`\n\nexport const Description = styled.p``\n\nexport const IssueList = styled.ul``\n\nexport const Issue = styled.li``\n","import React, { useState } from \"react\"\nimport { Wrapper, Title, Description, Logo, LogoWrapper } from \"./Repo.styled\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst Repo = ({\n  content: {\n    repo: { name, url, description },\n  },\n}) => {\n  const data = useStaticQuery(graphql`\n    query {\n      githubImage: file(relativePath: { eq: \"github.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 100, maxHeight: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      codesandboxImage: file(relativePath: { eq: \"codesandbox.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 100, maxHeight: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  const [toggle, setToggle] = useState(false)\n\n  return (\n    <Wrapper\n      onClick={() => {\n        setToggle(!toggle)\n      }}\n    >\n      <Title>{name}</Title>\n      <Description>{description}</Description>\n      <LogoWrapper>\n        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n          <Logo fluid={data.githubImage.childImageSharp.fluid} />\n        </a>\n        <a\n          href={url.replace(\"github\", \"githubbox\")}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <Logo fluid={data.codesandboxImage.childImageSharp.fluid} />\n        </a>\n      </LogoWrapper>\n    </Wrapper>\n  )\n}\n\nexport default Repo\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { StyledRepoList } from \"./RepoList.styled\"\nimport Repo from \"../Repo\"\n\nconst RepoList = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      github {\n        search(\n          type: REPOSITORY\n          query: \"user:filipeestacio topic:portfolio\"\n          last: 10\n        ) {\n          repos: edges {\n            repo: node {\n              ... on GITHUB_Repository {\n                name\n                url\n                description\n                issues(last: 3) {\n                  nodes {\n                    title\n                    createdAt\n                    bodyText\n                  }\n                  totalCount\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <StyledRepoList>\n      {data.github.search.repos.map(repo => (\n        <Repo content={repo} />\n      ))}\n    </StyledRepoList>\n  )\n}\n\nexport default RepoList\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport RepoList from \"../components/RepoList\"\n\nconst Repos = () => {\n  return (\n    <Layout>\n      <h1>My work on Github</h1>\n      <RepoList />\n    </Layout>\n  )\n}\n\nexport default Repos\n"],"sourceRoot":""}