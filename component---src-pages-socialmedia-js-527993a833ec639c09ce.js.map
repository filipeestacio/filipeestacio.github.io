{"version":3,"sources":["webpack:///./src/components/Gallery/Gallery.styled.js","webpack:///./src/components/Image/Image.styled.js","webpack:///./src/components/Image/Image.js","webpack:///./src/components/Gallery/Gallery.js","webpack:///./src/components/TweetList/TweetList.styled.js","webpack:///./src/components/Tweet/Tweet.styled.js","webpack:///./src/components/Tweet/Tweet.js","webpack:///./src/components/TweetList/TweetList.js","webpack:///./src/pages/socialmedia.js"],"names":["StyledGallery","styled","div","ImageWrapper","StyledImage","Img","Caption","p","AnimatedCaption","animated","Image","props","useState","hover","setHover","fade","useSpring","opacity","fluid","caption","onMouseEnter","onMouseLeave","style","Gallery","data","useStaticQuery","allInstaNode","grams","map","item","i","gram","localFile","childImageSharp","size","key","StyledTweetList","StyledTweet","Content","Date","Tweet","content","full_text","created_at","TweetList","allTwitterStatusesUserTimelineMyTweets","tweets","id","tweet","Note","Link","a","SocialMedia","Layout","href","target","rel"],"mappings":"+JAEMA,EAAgBC,IAAOC,IAAV,mFAAGD,CAAH,6R,qBCCbE,EAAeF,IAAOC,IAAV,+EAAGD,CAAH,wBAGZG,EAAcH,YAAOI,KAAV,8EAAGJ,CAAH,kCAKXK,EAAUL,IAAOM,EAAV,0EAAGN,CAAH,gU,YCPPO,EAAkBC,YAASH,GAoBlBI,EAlBD,SAAAC,GAAU,IAAD,EACKC,oBAAS,GAA5BC,EADc,KACPC,EADO,KAGfC,EAAOC,YAAU,CACrBC,QAASJ,EAAQ,EAAI,IAEfK,EAAmBP,EAAnBO,MAAOC,EAAYR,EAAZQ,QACf,OACE,kBAAChB,EAAD,CACEiB,aAAc,kBAAMN,GAAS,IAC7BO,aAAc,kBAAMP,GAAS,KAE7B,kBAACV,EAAD,CAAac,MAAOA,IACpB,kBAACV,EAAD,CAAiBc,MAAOP,GAAOI,KC6BtBI,EA3CC,WAGd,IAAMC,EAAOC,YAAe,cAoB5B,OACE,6BACE,kBAACzB,EAAD,KACGwB,EAAKE,aAAaC,MAAMC,KAAI,SAACC,EAAMC,GAClC,OAAOD,EAAKE,KAAKC,UACf,kBAAC,EAAD,CACEd,MAAOW,EAAKE,KAAKC,UAAUC,gBAAgBf,MAC3CgB,KAAK,MACLC,IAAKL,EACLX,QAASU,EAAKE,KAAKZ,UAGrB,sDCtCNiB,EAAkBnC,IAAOC,IAAV,uFAAGD,CAAH,yFCAfoC,EAAcpC,IAAOC,IAAV,2EAAGD,CAAH,yGASXqC,EAAUrC,IAAOM,EAAV,uEAAGN,CAAH,yCAKPsC,EAAOtC,IAAOC,IAAV,oEAAGD,CAAH,8ECbK,SAASuC,EAAM7B,GAAQ,IAAD,EAG/BA,EADF8B,QAAWC,EAFsB,EAEtBA,UAAWC,EAFW,EAEXA,WAGxB,OACE,kBAACN,EAAD,KACE,kBAACC,EAAD,KAAUI,GACV,kBAAC,EAAD,KAAOC,ICNN,IA2BQC,EA3BU,WACvB,IAAMpB,EAAOC,YAAe,cAiB5B,OACE,kBAACW,EAAD,KACGZ,EAAKqB,uCAAuCC,OAAOlB,KAAI,SAACC,EAAMC,GAC7D,OAAO,kBAACU,EAAD,CAAOO,GAAIjB,EAAGW,QAASZ,EAAKmB,aCpBrCC,EAAOhD,IAAOM,EAAV,wEAAGN,CAAH,yCAKJiD,EAAOjD,IAAOkD,EAAV,wEAAGlD,CAAH,uCAyCKmD,UApCK,WAClB,OACE,kBAACC,EAAA,EAAD,KACE,4CACA,4BACE,kBAACH,EAAD,CACEI,KAAK,oCACLC,OAAO,SACPC,IAAI,uBAHN,YASF,kBAAC,EAAD,MACA,kBAACP,EAAD,yEAGA,4BACE,kBAACC,EAAD,CACEI,KAAK,gDACLC,OAAO,SACPC,IAAI,uBAHN,cAQF,kBAAC,EAAD,MACA,kBAACP,EAAD","file":"component---src-pages-socialmedia-js-527993a833ec639c09ce.js","sourcesContent":["import styled from \"styled-components\"\n\nconst StyledGallery = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: auto auto;\n  grid-gap: 10px 10px;\n  justify-content: center;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto auto auto;\n  }\n\n  @media (max-width: 700px) {\n    display: flex;\n    flex-direction: column;\n  }\n`\n\nexport { StyledGallery }\n","import styled from \"styled-components\"\nimport Img from \"gatsby-image\"\n\nconst ImageWrapper = styled.div`\n  position: relative;\n`\nconst StyledImage = styled(Img)`\n  position: absolute;\n  z-index: 1;\n`\n\nconst Caption = styled.p`\n  position: absolute;\n  margin: 0;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n  color: white;\n  background: rgba(0, 0, 0, 0.8);\n  font-size: 1vw;\n  line-height: 1.5vw;\n\n  display: flex;\n  align-items: center;\n  text-align: center;\n\n  @media (max-width: 1200px) {\n    font-size: 1.8vw;\n    line-height: 2.6vw;\n  }\n\n  @media (max-width: 700px) {\n    font-size: 5vw;\n    line-height: 7.5vw;\n  }\n`\n\nexport { ImageWrapper, StyledImage, Caption }\n","import React, { useState } from \"react\"\nimport { ImageWrapper, StyledImage, Caption } from \"./Image.styled\"\nimport { useSpring, animated } from \"react-spring\"\n\nconst AnimatedCaption = animated(Caption)\n\nconst Image = props => {\n  const [hover, setHover] = useState(false)\n\n  const fade = useSpring({\n    opacity: hover ? 1 : 0,\n  })\n  const { fluid, caption } = props\n  return (\n    <ImageWrapper\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <StyledImage fluid={fluid} />\n      <AnimatedCaption style={fade}>{caption}</AnimatedCaption>\n    </ImageWrapper>\n  )\n}\n\nexport default Image\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StyledGallery } from \"./Gallery.styled\"\nimport Image from \"../Image\"\n\nconst Gallery = () => {\n  // TODO: make the limit and the size of the images into variables?\n\n  const data = useStaticQuery(graphql`\n    query {\n      allInstaNode(limit: 8, filter: { mediaType: { eq: \"GraphImage\" } }) {\n        grams: edges {\n          gram: node {\n            id\n            caption\n            localFile {\n              childImageSharp {\n                fluid(maxWidth: 400, maxHeight: 400) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div>\n      <StyledGallery>\n        {data.allInstaNode.grams.map((item, i) => {\n          return item.gram.localFile ? (\n            <Image\n              fluid={item.gram.localFile.childImageSharp.fluid}\n              size=\"400\"\n              key={i}\n              caption={item.gram.caption}\n            />\n          ) : (\n            <div>Nothing to show</div>\n          )\n        })}\n      </StyledGallery>\n    </div>\n  )\n}\n\nexport default Gallery\n","import styled from \"styled-components\"\n\nconst StyledTweetList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 10px;\n`\n\nexport { StyledTweetList }\n","import styled from \"styled-components\"\n\nconst StyledTweet = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  background: black;\n  color: white;\n  border-radius: 10px;\n`\n\nconst Content = styled.p`\n  font-size: 0.8rem;\n  padding: 20px 20px;\n`\n\nconst Date = styled.div`\n  font-size: 0.6rem;\n  font-style: italic;\n  align-self: end;\n  padding: 0 10px 10px 0;\n`\n\nexport { StyledTweet, Content, Date }\n","import React from \"react\"\nimport { StyledTweet, Content, Date } from \"./Tweet.styled\"\n\nexport default function Tweet(props) {\n  const {\n    content: { full_text, created_at },\n  } = props\n\n  return (\n    <StyledTweet>\n      <Content>{full_text}</Content>\n      <Date>{created_at}</Date>\n    </StyledTweet>\n  )\n}\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { StyledTweetList } from \"./TweetList.styled\"\nimport Tweet from \"../Tweet\"\n\nexport const TweetList = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allTwitterStatusesUserTimelineMyTweets(\n        filter: {\n          entities: { hashtags: { elemMatch: { text: { eq: \"portfolio\" } } } }\n        }\n      ) {\n        tweets: edges {\n          tweet: node {\n            full_text\n            created_at\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <StyledTweetList>\n      {data.allTwitterStatusesUserTimelineMyTweets.tweets.map((item, i) => {\n        return <Tweet id={i} content={item.tweet} />\n      })}\n    </StyledTweetList>\n  )\n}\n\nexport default TweetList\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport Gallery from \"../components/Gallery\"\nimport TweetList from \"../components/TweetList\"\nimport styled from \"styled-components\"\n\nconst Note = styled.p`\n  font-size: 0.6rem;\n  font-style: italic;\n`\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: black;\n`\n\nconst SocialMedia = () => {\n  return (\n    <Layout>\n      <h1>Social Media</h1>\n      <h2>\n        <Link\n          href=\"https://twitter.com/FilipeEstacio\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Twitter\n        </Link>\n      </h2>\n\n      <TweetList />\n      <Note>\n        This is my twitter feed, filtered by posts containing #portfolio\n      </Note>\n      <h2>\n        <Link\n          href=\"https://www.instagram.com/adventures.of.figo/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Instagram\n        </Link>\n      </h2>\n      <Gallery />\n      <Note>\n        This is my dog's intstagram. I had to ask for his, since mine is set to\n        private!\n      </Note>\n    </Layout>\n  )\n}\n\nexport default SocialMedia\n"],"sourceRoot":""}